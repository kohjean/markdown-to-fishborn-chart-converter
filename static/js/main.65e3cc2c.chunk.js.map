{"version":3,"sources":["FileUploader.js","SubTitle.js","FileSection.js","CodeField.js","CodeSection.js","ConvertButton.js","Converter.js","App.js","reportWebVitals.js","index.js"],"names":["FileUploader","props","htmlFor","sx","fontSize","size","cursor","id","type","name","accept","SubTitle","text","StyledForm","styled","form","FileSection","action","method","Container","div","StyledTextarea","textarea","StyledLabel","label","CodeField","CodeSection","ConvertButton","Button","variant","endIcon","backgroundColor","StyledDiv","AlignCenter","Converter","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGaA,EAAe,SAACC,GAC3B,OACE,qCACE,uBAAOC,QAAQ,OAAf,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAUH,EAAMI,KAChB,UAAW,CAAEC,OAAQ,gBAI3B,uBAAOC,GAAG,OAAOC,KAAK,OAAOC,KAAK,OAAOC,OAAO,YCdzCC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,6BAAKA,KCIrCC,EAAaC,IAAOC,KAAV,2CAIHC,EAAc,WACzB,OACE,eAACH,EAAD,CAAYN,GAAG,gBAAgBU,OAAO,MAAMC,OAAO,GAAnD,UACE,cAAC,EAAD,CAAUN,KAAK,gBACf,cAAC,EAAD,CAAcP,KAAM,cCVpBc,EAAYL,IAAOM,IAAV,8NAcTC,EAAiBP,IAAOQ,SAAV,maAwBdC,EAAcT,IAAOU,MAAV,wOAcJC,EAAY,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KAC1B,OACE,eAACU,EAAD,WACE,cAACI,EAAD,CAAarB,QAAQ,WAArB,SAAiCO,IACjC,cAACY,EAAD,CAAgBd,GAAG,iBCrDnBY,EAAYL,IAAOM,IAAV,2CAIFM,EAAc,SAACzB,GAC1B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAUW,KAAK,eACf,cAAC,EAAD,CAAWH,KAAM,a,yBCVVkB,EAAgB,WAC3B,OACE,mCACE,cAACC,EAAA,EAAD,CACEpB,KAAK,SACLO,KAAK,gBACLc,QAAQ,YACRxB,KAAK,QACLyB,QAAS,cAAC,IAAD,IACT3B,GAAI,CACF4B,gBAAiB,wBACjB,UAAW,CACTA,gBAAiB,wBATvB,wBCDAC,EAAYlB,IAAOM,IAAV,gGAMTa,EAAcnB,IAAOM,IAAV,sEAKJc,EAAY,WACvB,OACE,qCACA,eAACF,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAD,UAAa,qCACb,cAAC,EAAD,OAEF,cAAC,EAAD,Q,MCVWE,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sEACA,cAAC,EAAD,UCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.65e3cc2c.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\n\nexport const FileUploader = (props) => {\n  return (\n    <>\n      <label htmlFor=\"file\">\n        <UploadFileIcon\n          sx={{\n            fontSize: props.size,\n            '&:hover': { cursor: 'pointer' },\n          }}\n        />\n      </label>\n      <input id=\"file\" type=\"file\" name=\"file\" accept=\".md\" />\n    </>\n  );\n};\n","export const SubTitle = ({ text }) => <h2>{text}</h2>;\n","import { FileUploader } from './FileUploader';\nimport { SubTitle } from './SubTitle';\nimport styled from '@emotion/styled';\n\nconst StyledForm = styled.form`\n  width: 40%;\n`;\n\nexport const FileSection = () => {\n  return (\n    <StyledForm id=\"file-uploader\" action=\"./#\" method=\"\">\n      <SubTitle text=\"File Upload\" />\n      <FileUploader size={'10rem'} />\n    </StyledForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  width: 50%;\n  margin: 0 auto;\n  height: 10rem;\n  &:hover label{\n    color: #1976d2;\n  }\n  &:focus-within {\n    color: #1976d2;\n  }\n  `;\n\nconst StyledTextarea = styled.textarea`\n  box-sizing: border-box;\n  color: white;\n  border: 1px solid #fff;\n  border-radius: 4px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: inherit;\n  transition: 0.2s;\n  height: 100%;\n  width: 100%;\n  padding: 8px 4px;\n  &:hover {\n    border: 1px solid #1976d2;\n  }\n  &:focus {\n    border: 1px solid #1976d2;\n  }\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nconst StyledLabel = styled.label`\n  position: absolute;\n  top: -1rem;\n  left: 1rem;\n  padding: 8px 2px 0;\n  transition: 0.2s;\n  background-color: #282c34;\n  z-index: 1;\n  font-size: 0.8rem;\n  &:active {\n    color: #1976d2;\n  }\n`;\n\nexport const CodeField = ({ name }) => {\n  return (\n    <Container>\n      <StyledLabel htmlFor=\"textarea\">{name}</StyledLabel>\n      <StyledTextarea id=\"textarea\" />\n    </Container>\n  );\n};\n","import React from 'react';\nimport { SubTitle } from './SubTitle';\nimport { CodeField } from './CodeField';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  width: 40%;\n`;\n\nexport const CodeSection = (props) => {\n  return (\n    <Container>\n      <SubTitle text=\"Input Code\" />\n      <CodeField name={\"CODE\"}/>\n    </Container>\n  );\n};\n","import Button from '@mui/material/Button';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\n\nexport const ConvertButton = () => {\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        form=\"file-uploader\"\n        variant=\"contained\"\n        size=\"large\"\n        endIcon={<ChangeCircleIcon />}\n        sx={{\n          backgroundColor: 'rgba(61,204,250, 0.6)',\n          '&:hover': {\n            backgroundColor: 'rgba(61,204,250, 1)',\n          },\n        }}\n      >\n        Convert\n      </Button>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FileSection } from './FileSection';\nimport { CodeSection } from './CodeSection';\nimport { ConvertButton } from './ConvertButton';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nconst AlignCenter = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Converter = () => {\n  return (\n    <>\n    <StyledDiv>\n      <FileSection />\n      <AlignCenter><p>or</p></AlignCenter>\n      <CodeSection />\n    </StyledDiv>\n    <ConvertButton />\n    </>\n  );\n};\n","import { Converter } from './Converter';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>markdown to fishbone-chart converter</h1>\n        <Converter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}