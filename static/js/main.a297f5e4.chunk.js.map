{"version":3,"sources":["FileUploader.js","SubTitle.js","hooks/useToggleActive.js","FileSection.js","CodeField.js","CodeSection.js","ConvertButton.js","Converter.js","App.js","reportWebVitals.js","index.js"],"names":["FileUploader","props","useEffect","input","document","getElementById","reader","FileReader","data","querySelector","addEventListener","file","files","readAsText","onload","value","result","htmlFor","sx","fontSize","size","cursor","id","type","accept","name","SubTitle","text","useToggleActive","activateId","inactivateId","activate","inactivate","classList","add","remove","StyledForm","styled","form","FileSection","action","method","Container","div","StyledTextarea","textarea","StyledLabel","label","CodeField","CodeSection","ConvertButton","Button","variant","endIcon","backgroundColor","StyledDiv","AlignCenter","Converter","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mRAGaA,EAAe,SAACC,GAiB3B,OAhBAC,qBAAU,WACR,IAAMC,EAAQC,SAASC,eAAe,QAChCC,EAAS,IAAIC,WACbC,EAAOJ,SAASK,cAAc,4BACpCN,EAAMO,iBAAiB,UAAU,SAACC,GAAU,IAAD,gBAC5BR,EAAMS,OADsB,IACzC,2BAAKD,EAAqB,QACxBL,EAAOO,WAAWF,EAAM,SACxBL,EAAOQ,OAAS,WACdN,EAAKO,MAAQT,EAAOU,QAJiB,oCAU1C,IAGD,qCACE,uBAAOC,QAAQ,OAAf,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAUlB,EAAMmB,KAChB,UAAW,CAAEC,OAAQ,gBAI3B,uBAAOC,GAAG,OAAOC,KAAK,OAAOC,OAAO,QAEpC,uBAAOD,KAAK,SAASE,KAAK,mBChCnBC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,6BAAKA,KCE9BC,EAAkB,SAACC,EAAYC,GAC1C5B,qBAAU,WACR,IAAM6B,EAAW3B,SAASC,eAAewB,GACnCG,EAAa5B,SAASC,eAAeyB,GAC3CC,EAASrB,iBAAiB,SAAS,WACjCqB,EAASE,UAAUC,IAAI,UACvBH,EAASE,UAAUE,OAAO,YAC1BH,EAAWC,UAAUE,OAAO,UAC5BH,EAAWC,UAAUC,IAAI,iBAE1B,KCPCE,EAAaC,IAAOC,KAAV,2CAIHC,EAAc,WAEzB,OADAX,EAAgB,eAAgB,gBAE9B,eAACQ,EAAD,CAAYd,GAAG,eAAekB,OAAO,uBAAuBC,OAAO,GAAnE,UACE,cAAC,EAAD,CAAUd,KAAK,gBACf,cAAC,EAAD,CAAcP,KAAM,cCZpBsB,EAAYL,IAAOM,IAAV,8NAcTC,EAAiBP,IAAOQ,SAAV,maAwBdC,EAAcT,IAAOU,MAAV,wOAcJC,EAAY,SAAC,GAAc,IAAZvB,EAAW,EAAXA,KAC1B,OACE,eAACiB,EAAD,WACE,cAACI,EAAD,CAAa7B,QAAQ,WAArB,SAAiCQ,IACjC,cAACmB,EAAD,CAAgBtB,GAAG,iBCrDnBoB,EAAYL,IAAOM,IAAV,2CAIFM,EAAc,SAAChD,GAE1B,OADA2B,EAAgB,eAAgB,gBAE9B,eAAC,EAAD,CAAWN,GAAG,eAAd,UACE,cAAC,EAAD,CAAUK,KAAK,eACf,cAAC,EAAD,CAAWF,KAAM,a,yBCXVyB,EAAgB,WAC3B,OACE,mCACE,cAACC,EAAA,EAAD,CACE5B,KAAK,SACLe,KAAK,eACLc,QAAQ,YACRhC,KAAK,QACLiC,QAAS,cAAC,IAAD,IACTnC,GAAI,CACFoC,gBAAiB,wBACjB,UAAW,CACTA,gBAAiB,wBATvB,wBCDAC,EAAYlB,IAAOM,IAAV,gGAMTa,EAAcnB,IAAOM,IAAV,sEAKJc,EAAY,WACvB,OACE,qCACE,eAACF,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAD,UACE,qCAEF,cAAC,EAAD,OAEF,cAAC,EAAD,Q,MCZSE,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sEACA,cAAC,EAAD,UCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASC,eAAe,SAM1BuD,M","file":"static/js/main.a297f5e4.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\n\nexport const FileUploader = (props) => {\n  useEffect(() => {\n    const input = document.getElementById('file');\n    const reader = new FileReader();\n    const data = document.querySelector('input[name=\"files-data\"]');\n    input.addEventListener('change', (file) => {\n      for (file of input.files) {\n        reader.readAsText(file, 'UTF-8');\n        reader.onload = () => {\n          data.value = reader.result;\n          // let elems = reader.result.split(/\\r?\\n/);\n          // elems.forEach((elem) => console.log(elem));\n        };\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <label htmlFor=\"file\">\n        <UploadFileIcon\n          sx={{\n            fontSize: props.size,\n            '&:hover': { cursor: 'pointer' },\n          }}\n        />\n      </label>\n      <input id=\"file\" type=\"file\" accept=\".md\" />\n      {/* この下のボタンをconvertボタンの下に共通のパーツとして置くか */}\n      <input type=\"hidden\" name=\"files-data\" />\n    </>\n  );\n};\n","export const SubTitle = ({ text }) => <h2>{text}</h2>;\n","import { useEffect } from 'react';\n\nexport const useToggleActive = (activateId, inactivateId) => {\n  useEffect(() => {\n    const activate = document.getElementById(activateId);\n    const inactivate = document.getElementById(inactivateId);\n    activate.addEventListener('click', () => {\n      activate.classList.add('active');\n      activate.classList.remove('inactive');\n      inactivate.classList.remove('active');\n      inactivate.classList.add('inactive');\n    });\n  }, []);\n};\n","import { FileUploader } from './FileUploader';\nimport { SubTitle } from './SubTitle';\nimport { useToggleActive } from './hooks/useToggleActive';\nimport styled from '@emotion/styled';\n\nconst StyledForm = styled.form`\n  width: 40%;\n`;\n\nexport const FileSection = () => {\n  useToggleActive('file-section', 'code-section');\n  return (\n    <StyledForm id=\"file-section\" action=\"./conversion_success\" method=\"\">\n      <SubTitle text=\"File Upload\" />\n      <FileUploader size={'10rem'} />\n    </StyledForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  width: 50%;\n  margin: 0 auto;\n  height: 10rem;\n  &:hover label{\n    color: #1976d2;\n  }\n  &:focus-within {\n    color: #1976d2;\n  }\n  `;\n\nconst StyledTextarea = styled.textarea`\n  box-sizing: border-box;\n  color: white;\n  border: 1px solid #fff;\n  border-radius: 4px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: inherit;\n  transition: 0.2s;\n  height: 100%;\n  width: 100%;\n  padding: 8px 4px;\n  &:hover {\n    border: 1px solid #1976d2;\n  }\n  &:focus {\n    border: 1px solid #1976d2;\n  }\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nconst StyledLabel = styled.label`\n  position: absolute;\n  top: -1rem;\n  left: 1rem;\n  padding: 8px 2px 0;\n  transition: 0.2s;\n  background-color: #282c34;\n  z-index: 1;\n  font-size: 0.8rem;\n  &:active {\n    color: #1976d2;\n  }\n`;\n\nexport const CodeField = ({ name }) => {\n  return (\n    <Container>\n      <StyledLabel htmlFor=\"textarea\">{name}</StyledLabel>\n      <StyledTextarea id=\"textarea\" />\n    </Container>\n  );\n};\n","import { SubTitle } from './SubTitle';\nimport { CodeField } from './CodeField';\nimport { useToggleActive } from './hooks/useToggleActive';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  width: 40%;\n`;\n\nexport const CodeSection = (props) => {\n  useToggleActive('code-section', 'file-section');\n  return (\n    <Container id=\"code-section\">\n      <SubTitle text=\"Input Code\" />\n      <CodeField name={'CODE'} />\n    </Container>\n  );\n};\n","import Button from '@mui/material/Button';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\n\nexport const ConvertButton = () => {\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        form=\"file-section\"\n        variant=\"contained\"\n        size=\"large\"\n        endIcon={<ChangeCircleIcon />}\n        sx={{\n          backgroundColor: 'rgba(61,204,250, 0.6)',\n          '&:hover': {\n            backgroundColor: 'rgba(61,204,250, 1)',\n          },\n        }}\n      >\n        Convert\n      </Button>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FileSection } from './FileSection';\nimport { CodeSection } from './CodeSection';\nimport { ConvertButton } from './ConvertButton';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nconst AlignCenter = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Converter = () => {\n  return (\n    <>\n      <StyledDiv>\n        <FileSection />\n        <AlignCenter>\n          <p>or</p>\n        </AlignCenter>\n        <CodeSection />\n      </StyledDiv>\n      <ConvertButton />\n    </>\n  );\n};\n","import { Converter } from './Converter';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>markdown to fishbone-chart converter</h1>\n        <Converter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}