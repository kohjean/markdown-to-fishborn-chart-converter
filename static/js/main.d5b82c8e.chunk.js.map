{"version":3,"sources":["FileUploader.js","SubTitle.js","hooks/useToggleActive.js","FileSection.js","CodeField.js","CodeSection.js","ConvertButton.js","Converter.js","App.js","reportWebVitals.js","index.js"],"names":["FileUploader","props","htmlFor","sx","fontSize","size","cursor","id","type","accept","onChange","event","reader","FileReader","readAsText","target","files","onload","setText","result","fileDataSetter","SubTitle","text","useToggleActive","activateId","inactivateId","useEffect","activate","document","getElementById","inactivate","addEventListener","classList","add","remove","Container","styled","div","FileSection","StyledTextarea","textarea","StyledLabel","label","CodeField","name","value","textDataSetter","CodeSection","ConvertButton","Button","form","variant","endIcon","backgroundColor","StyledForm","AlignCenter","Converter","useState","action","method","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d5b82c8e.chunk.js","sourcesContent":["import UploadFileIcon from '@mui/icons-material/UploadFile';\n\nexport const FileUploader = (props) => {\n  const fileDataSetter = (event) => {\n    const reader = new FileReader();\n    reader.readAsText(event.target.files[0], 'UTF-8');\n    reader.onload = () => {\n      props.setText(reader.result);\n      // let elems = reader.result.split(/\\r?\\n/);\n      // elems.forEach((elem) => console.log(elem));\n    };\n  };\n\n  return (\n    <>\n      <label htmlFor=\"file\">\n        <UploadFileIcon\n          sx={{\n            fontSize: props.size,\n            '&:hover': { cursor: 'pointer' },\n          }}\n        />\n      </label>\n      <input\n        id=\"file\"\n        type=\"file\"\n        accept=\".md\"\n        onChange={(event) => fileDataSetter(event)}\n      />\n    </>\n  );\n};\n","export const SubTitle = ({ text }) => <h2>{text}</h2>;\n","import { useEffect } from 'react';\n\nexport const useToggleActive = (activateId, inactivateId) => {\n  useEffect(() => {\n    const activate = document.getElementById(activateId);\n    const inactivate = document.getElementById(inactivateId);\n    activate.addEventListener('click', () => {\n      activate.classList.add('active');\n      activate.classList.remove('inactive');\n      inactivate.classList.remove('active');\n      inactivate.classList.add('inactive');\n    });\n  }, []);\n};\n","import { FileUploader } from './FileUploader';\nimport { SubTitle } from './SubTitle';\nimport { useToggleActive } from './hooks/useToggleActive';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  width: 40%;\n`;\n\nexport const FileSection = ({ setText }) => {\n  useToggleActive('file-section', 'code-section');\n  return (\n    <Container id=\"file-section\">\n      <SubTitle text=\"File Upload\" />\n      <FileUploader size={'10rem'} setText={setText} />\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  width: 50%;\n  margin: 0 auto;\n  height: 10rem;\n  &:hover label {\n    color: #1976d2;\n  }\n  &:focus-within {\n    color: #1976d2;\n  }\n`;\n\nconst StyledTextarea = styled.textarea`\n  box-sizing: border-box;\n  color: white;\n  border: 1px solid #fff;\n  border-radius: 4px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: inherit;\n  transition: 0.2s;\n  height: 100%;\n  width: 100%;\n  padding: 8px 4px;\n  &:hover {\n    border: 1px solid #1976d2;\n  }\n  &:focus {\n    border: 1px solid #1976d2;\n  }\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nconst StyledLabel = styled.label`\n  position: absolute;\n  top: -1rem;\n  left: 1rem;\n  padding: 8px 2px 0;\n  transition: 0.2s;\n  background-color: #282c34;\n  z-index: 1;\n  font-size: 0.8rem;\n  &:active {\n    color: #1976d2;\n  }\n`;\n\nexport const CodeField = ({ name, setText }) => {\n  const textDataSetter = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <Container>\n      <StyledLabel htmlFor=\"textarea\">{name}</StyledLabel>\n      <StyledTextarea\n        id=\"textarea\"\n        onChange={(event) => textDataSetter(event)}\n      />\n    </Container>\n  );\n};\n","import { SubTitle } from './SubTitle';\nimport { CodeField } from './CodeField';\nimport { useToggleActive } from './hooks/useToggleActive';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  width: 40%;\n`;\n\nexport const CodeSection = ({ setText }) => {\n  useToggleActive('code-section', 'file-section');\n  return (\n    <Container id=\"code-section\">\n      <SubTitle text=\"Input Code\" />\n      <CodeField name={'CODE'} setText={setText} />\n    </Container>\n  );\n};\n","import Button from '@mui/material/Button';\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\n\nexport const ConvertButton = ({target}) => {\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        form={target}\n        variant=\"contained\"\n        size=\"large\"\n        endIcon={<ChangeCircleIcon />}\n        sx={{\n          backgroundColor: 'rgba(61,204,250, 0.6)',\n          '&:hover': {\n            backgroundColor: 'rgba(61,204,250, 1)',\n          },\n        }}\n      >\n        Convert\n      </Button>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { FileSection } from './FileSection';\nimport { CodeSection } from './CodeSection';\nimport { ConvertButton } from './ConvertButton';\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nconst AlignCenter = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Converter = () => {\n  const [text, setText] = useState('');\n  return (\n    <>\n      <StyledForm id=\"form\" action=\"./\" method=\"\">\n        <FileSection setText={setText} />\n        <AlignCenter>\n          <p>or</p>\n        </AlignCenter>\n        <CodeSection setText={setText} />\n        <input type=\"hidden\" name=\"files-data\" value={text} />\n      </StyledForm>\n      <ConvertButton target={'form'} />\n    </>\n  );\n};\n","import { Converter } from './Converter';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>markdown to fishbone-chart converter</h1>\n        <Converter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}